transforms = c("troot","sigmoid","exp_dbl","sin_deg")
probs <- gen.probs.gmjmcmc(transforms)
params <- gen.params.gmjmcmc(train)
probs$gen <- c(0.22,0.22,0.06,0.06,0.22,0.22)
#probs$gen <- c(0.4,0.4,0.1,0.1,0,0)
params$feat$pop.max <- 20
params$feat$D <- 10
params$feat$L <- 5
params$feat$check.col <- F
model <- fbms(formula = MEDV ~ ., data = train, transforms = transforms, method = "gmjmcmc", P = 25, family="gaussian", params=params)
summary(model)
preds <- predict(model,test[-14])
model <- gam(MEDV ~ s(CRIM),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(ZN),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(INDUS),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(NOX),
data = df)
# Plot the smooth terms
plot(model)
transforms = c("troot","sigmoid","exp_dbl","p3")
probs <- gen.probs.gmjmcmc(transforms)
params <- gen.params.gmjmcmc(train)
probs$gen <- c(0.22,0.22,0.06,0.06,0.22,0.22)
#probs$gen <- c(0.4,0.4,0.1,0.1,0,0)
params$feat$pop.max <- 20
params$feat$D <- 10
params$feat$L <- 5
params$feat$check.col <- F
model <- fbms(formula = MEDV ~ ., data = train, transforms = transforms, method = "gmjmcmc", P = 25, family="gaussian", params=params)
summary(model)
preds <- predict(model,test[-14])
cor(preds$aggr$mean,test$MEDV)^2
mae <- mean(abs(preds$aggr$mean-test$MEDV))
mae
# RMSE
rmse <- sqrt(mean((preds$aggr$mean-test$MEDV)^2))
rmse
lin <- lm(formula = MEDV~.,data = train)
predslin <- predict(lin,test[,-14])
cor(predslin,test$MEDV)^2
model <- gam(MEDV ~ s(CRIM),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(ZN),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(INDUS),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(NOX),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(RM),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(AGE),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(DIS),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(TAX),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(PTRATIO),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(B),
data = df)
# Plot the smooth terms
plot(model)
model <- gam(MEDV ~ s(LSTAT),
data = df)
# Plot the smooth terms
plot(model)
transforms = c("troot","sigmoid","exp_dbl","p3","p0")
probs <- gen.probs.gmjmcmc(transforms)
params <- gen.params.gmjmcmc(train)
probs$gen <- c(0.22,0.22,0.06,0.06,0.22,0.22)
#probs$gen <- c(0.4,0.4,0.1,0.1,0,0)
params$feat$pop.max <- 20
params$feat$D <- 10
params$feat$L <- 5
params$feat$check.col <- F
model <- fbms(formula = MEDV ~ ., data = train, transforms = transforms, method = "gmjmcmc", P = 25, family="gaussian", params=params)
summary(model)
preds <- predict(model,test[-14])
cor(preds$aggr$mean,test$MEDV)^2
mae <- mean(abs(preds$aggr$mean-test$MEDV))
mae
# RMSE
rmse <- sqrt(mean((preds$aggr$mean-test$MEDV)^2))
rmse
model <- fbms(formula = MEDV ~ ., data = train, transforms = transforms, method = "gmjmcmc", P = 200, family="gaussian", params=params)
summary(model)
preds <- predict(model,test[-14])
cor(preds$aggr$mean,test$MEDV)^2
mae <- mean(abs(preds$aggr$mean-test$MEDV))
mae
# RMSE
rmse <- sqrt(mean((preds$aggr$mean-test$MEDV)^2))
rmse
model <- fbms(formula = MEDV ~ ., data = train, transforms = transforms, method = "gmjmcmc", P = 200, family="gaussian", params=params)
summary(model)
preds <- predict(model,test[-14])
cor(preds$aggr$mean,test$MEDV)^2
mae <- mean(abs(preds$aggr$mean-test$MEDV))
mae
# RMSE
rmse <- sqrt(mean((preds$aggr$mean-test$MEDV)^2))
rmse
sin_deg
dim(df)
summary(df)
dim(train)
dim(test)
cor(train)
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/30_Single_200_pop.csv")
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_Single_200_pop.csv")
#colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
colnames <- c("S1","S2","S3","S4","S5","S6")
colnames <- c("P1","P2","P3","P4","P5","P6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
#colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
colnames <- c("S1","S2","S3","S4","S5","S6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_multiple_50_pop.csv")
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_Multiple_50_pop.csv")
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_parallel_50_pop.csv")
colnames <- c("P1","P2","P3","P4","P5","P6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_Single_200_pop_noise.csv")
#colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
colnames <- c("S1","S2","S3","S4","S5","S6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_parallel_50_pop_noise.csv")
colnames <- c("P1","P2","P3","P4","P5","P6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Abalone/ 2024-12-12_13_15/merged_results.csv")
colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
rownames <- c("Correlation","MAE","RMSE","Corr_Med","Corr_Min","Corr_Max","MAE_Med","MAE_Min","MAE_Max","RMSE_Med","RMSE_Min","RMSE_Max","Time")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Correlation",experiment] <- mean(exp_df$Correlation)
Metrics["Corr_Med",experiment] <- median(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Min",experiment] <- min(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Max",experiment] <- max(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(exp_df$MAE, na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["RMSE",experiment] <- mean(exp_df$RMSE, na.rm = TRUE)
Metrics["RMSE_Med",experiment] <- median(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Min",experiment] <- min(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Max",experiment] <- max(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(exp_df$Time)
}
Metrics
date <- "2024-12-05_09_20"
results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Abalone/","results_",date,".csv", sep=""))
colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
rownames <- c("Correlation","MAE","RMSE","Corr_Med","Corr_Min","Corr_Max","MAE_Med","MAE_Min","MAE_Max","RMSE_Med","RMSE_Min","RMSE_Max","Time")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Correlation",experiment] <- mean(exp_df$Correlation)
Metrics["Corr_Med",experiment] <- median(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Min",experiment] <- min(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Max",experiment] <- max(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(exp_df$MAE, na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["RMSE",experiment] <- mean(exp_df$RMSE, na.rm = TRUE)
Metrics["RMSE_Med",experiment] <- median(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Min",experiment] <- min(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Max",experiment] <- max(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(exp_df$Time)
}
Metrics
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_single_200_pop_noise.csv")
#colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
colnames <- c("S1","S2","S3","S4","S5","S6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
#results <- read.csv(paste("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/","results_",date,".csv", sep=""))
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Kepler/Final/30_parallel_50_pop_noise.csv")
#colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
colnames <- c("S1","S2","S3","S4","S5","S6")
colnames <- c("P1","P2","P3","P4","P5","P6")
rownames <- c("Pow","F1","F2","F3","F4","Count_P","Count_FP","FDR","Correlation_P","Correlation_FP","MAE","Time","Correlation_P_Med","Correlation_P_Max","Correlation_P_Min","Correlation_FP_Med","Correlation_FP_Max","Correlation_FP_Min","MAE_Med","MAE_Max","MAE_Min")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Pow",experiment] <- mean(apply(exp_df[c("F1","F2","F3","F4")], 1, any))
Metrics["F1",experiment] <- sum(as.logical(exp_df$F1))
Metrics["F2",experiment] <- sum(as.logical(exp_df$F2))
Metrics["F3",experiment] <- sum(as.logical(exp_df$F3))
Metrics["F4",experiment] <- sum(as.logical(exp_df$F4))
Metrics["Count_P",experiment] <- mean(as.integer(exp_df$Count_P))
Metrics["Count_FP",experiment] <- mean(as.integer(exp_df$Count_FP))
Metrics["FDR",experiment] <- mean(as.integer(exp_df$Count_FP)/as.integer(exp_df$Count_P))
Metrics["Correlation_P",experiment] <- mean(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP",experiment] <- mean(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Med",experiment] <- median(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Med",experiment] <- median(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Max",experiment] <- max(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Max",experiment] <- max(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["Correlation_P_Min",experiment] <- min(as.numeric(exp_df$Correlation))
Metrics["Correlation_FP_Min",experiment] <- min(as.numeric(exp_df$Correlation_FP), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["Time",experiment] <- mean(as.numeric(exp_df$Time))
}
Metrics
results <- read.csv("/Users/ylvasofietollefsen/Documents/Uio/Master/Experiments/Housing/results_2025-01-18_11_42.csv")
colnames <- c("S1","S2","S3","S4","S5","S6","P1","P2","P3","P4","P5","P6")
rownames <- c("Correlation","MAE","RMSE","Time")
Metrics <- data.frame(matrix(ncol = length(colnames), nrow = length(rownames)))
colnames(Metrics) <- colnames
rownames(Metrics) <- rownames
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Correlation",experiment] <- mean(exp_df$Correlation)
Metrics["Corr_Med",experiment] <- median(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Min",experiment] <- min(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Max",experiment] <- max(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(exp_df$MAE, na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["RMSE",experiment] <- mean(exp_df$RMSE, na.rm = TRUE)
Metrics["RMSE_Med",experiment] <- median(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Min",experiment] <- min(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Max",experiment] <- max(as.numeric(exp_df$RMSE), na.rm = TRUE)
}
Metrics
for (experiment in colnames) {
exp_df <- results[results$Experiment==experiment,]
exp_df <- exp_df[rowSums(is.na(exp_df)) != ncol(exp_df), ]
Metrics["Correlation",experiment] <- mean(exp_df$Correlation)
Metrics["Corr_Med",experiment] <- median(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Min",experiment] <- min(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["Corr_Max",experiment] <- max(as.numeric(exp_df$Correlation), na.rm = TRUE)
Metrics["MAE",experiment] <- mean(exp_df$MAE, na.rm = TRUE)
Metrics["MAE_Med",experiment] <- median(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Min",experiment] <- min(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["MAE_Max",experiment] <- max(as.numeric(exp_df$MAE), na.rm = TRUE)
Metrics["RMSE",experiment] <- mean(exp_df$RMSE, na.rm = TRUE)
Metrics["RMSE_Med",experiment] <- median(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Min",experiment] <- min(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["RMSE_Max",experiment] <- max(as.numeric(exp_df$RMSE), na.rm = TRUE)
Metrics["Time",experiment] <- max(as.numeric(exp_df$Time), na.rm = TRUE)
}
Metrics
train <- read.csv("./train.csv")
train <- read.csv("./train.csv")
train <- read.csv("./train.csv")
dim(train)
dim(test)
test <- read.csv("./test.csv")
dim(test)
dim(train)
train <- read.csv("./train.csv")
train <- read.csv("./train.csv")
test <- read.csv("./test.csv")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
results <- read.csv("./Results/Single_results/merged_results.csv")
dim(results)
results <- read.csv("./testi/merged_results.csv")
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/metrics.R")
Metrics
test
source("~/Library/Mobile Documents/com~apple~CloudDocs/Master/Experiments/Housing/Extended/metrics_ex.R")
